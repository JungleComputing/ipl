plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.github.hierynomus.license' version '0.14.0'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    if (it.name != 'docs') {
        apply from: "${rootProject.rootDir}/gradle/common.gradle"
    }
}


// configure(subprojects.findAll {it.name != 'docs' && it.name != 'examples' && it.name != 'benchmarks'} ) {
//     apply plugin: 'maven'
//         apply plugin: 'signing'

//         signing {
//             sign configurations.archives
//         }

//     uploadArchives {
//         repositories {
//             mavenDeployer {
//                 beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

//                 repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                     authentication(userName: ossrhUsername, password: ossrhPassword)
//                 }
//                 // repository(url: "file://${System.properties['user.home']}/.m2/repository") {
//                 // }

//                 snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
//                     authentication(userName: ossrhUsername, password: ossrhPassword)
//                 }

//                 project.afterEvaluate {
//                     pom.project {

//                         groupId 'nl.junglecomputing.ipl'

//                         artifactId archivesBaseName
//                         description "${project.ext.pdescription}"
//                         name "${project.ext.pname}"
//                         println "${project.ext.pname}"

//                         packaging 'jar'
//                         url 'https://github.com/junglecomputing/ipl'

//                         scm {
//                             connection 'scm:git:git://github.com/junglecomputing/ipl.git'
//                             developerConnection 'scm:git:ssh://github.com:junglecomputing/ipl.git'
//                             url 'https://github.com/junglecomputing/ipl/tree/master'
//                         }

//                         licenses {
//                             license {
//                                 name 'The Apache License, Version 2.0'
//                                 url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                             }
//                         }

//                         developers {
//                             developer {
//                                 name = 'Rob van Nieuwpoort'
//                                 organization = 'Netherlands escience Center'
//                                 url = 'https://www.esciencecenter.nl/team/prof-rob-van-nieuwpoort-3'
//                             }
//                             developer {
//                                 name = 'Jason Maassen'
//                                 organization = 'Netherlands escience Center'
//                                 url = 'https://www.esciencecenter.nl/team/dr-jason-maassen/'
//                             }
//                             developer {
//                                 name = 'Niels Drost'
//                                 organization = 'Netherlands escience Center'
//                                 url = 'https://www.esciencecenter.nl/team/dr-niels-drost'
//                             }
//                             developer {
//                                 name = 'Ceriel Jacobs'
//                                 organization = 'Vrije Universiteit Amsterdam'
//                                 url = 'https://github.com/CerielJacobs'
//                             }
//                             developer {
//                                 name = 'Nick Palmer'
//                                 url = 'https://github.com/nickpalmer'
//                             }
//                         }
//                     }
//                 }
//             }
//         }
//     }
// }

defaultTasks 'clean', 'assemble', 'copyDeps'

dependencies {
    implementation project(path: 'api')
    implementation project(path: 'compile')
    implementation project(path: 'support')
    implementation project(path: 'util')
    implementation project(path: 'io')
    // implementation project(path: 'benchmarks')
    // implementation project(path: 'examples')
    // implementation project(path: 'impl-nio')
    // implementation project(path: 'impl-multi')
    implementation project(path: 'impl-tcp')
    // implementation project(path: 'impl-smartsockets')
    // implementation project(path: 'impl-stacking-dummy')
    // implementation project(path: 'impl-stacking-lrmc')
}
