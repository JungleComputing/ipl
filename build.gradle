plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.github.hierynomus.license' version '0.14.0'
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    if (it.name != 'docs') {
	apply from: "${rootProject.rootDir}/gradle/common.gradle"
    }
}

configure(subprojects.findAll {it.name != 'docs' && it.name != 'examples' && it.name != 'benchmarks'} ) {
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'com.jfrog.bintray'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'nl.junglecomputing.ipl'
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
                afterEvaluate {
                    artifactId archivesBaseName
                }
                version version
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_NAME')
        key = System.getenv('BINTRAY_APIKEY')
        publications = ['mavenJava']
        pkg {
            repo = 'JungleComputing-IPL'
            name = "$archivesBaseName"
            userOrg = "$user"
            vcsUrl = 'https://github.com/JungleComputing/ipl.git'
            licenses = ['Apache-2.0']
        }
    }
}

defaultTasks 'clean', 'assemble', 'copyDeps'

dependencies {
    compile project(path: 'api')
    compile project(path: 'compile')
    compile project(path: 'support')
    compile project(path: 'util')
    compile project(path: 'io')
    compile project(path: 'benchmarks')
    compile project(path: 'examples')
    compile project(path: 'impl-nio')
    compile project(path: 'impl-multi')
    compile project(path: 'impl-tcp')
    compile project(path: 'impl-smartsockets')
    compile project(path: 'impl-stacking-dummy')
    compile project(path: 'impl-stacking-lrmc')
}
