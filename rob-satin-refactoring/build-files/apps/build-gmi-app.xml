<project
    name="gmi-app"
    default="build"
    basedir=".">

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/build-iogen.xml"/>
    <import file="${ibis}/build-files/build-native.xml"/>
    <import file="${ibis}/build-files/apps/build-run.xml"/>

    <description>
	Ibis gmi application build.
    </description>

    <target name="property-gmi-build" unless="build">
	<echo message="build is undefined. Set it to the default value"/>
	<property name="build" location="build"/>
    </target>

    <property name="builddir" location="${build}"/>

    <target name="gmi-init"
	    depends="property-gmi-build,property-init"/>

    <target name="gmi"
	    depends="gmi-init">
	    <!-- commented out description
	    description="Preprocess GMI class files in the build tree"
	    -->
	<!-- <echo message="Do ONLY the class files in ibis/ipl"/> -->
	<path id="all-classes">
	    <fileset dir="${builddir}">
		<include name="**/*.class"/>
		<include name="ibis/ipl/*.class"/>
	    </fileset>
	</path>
	<pathconvert pathsep=" " property="classes.all" refid="all-classes">
	    <map from="${builddir}${file.separator}" to=""/>
	</pathconvert>
	<!--
	    Do regexp from ${classes.all} -> gmi-classes
		%s/.class//g
		%s/\${file.separator}/./g
	-->
	<echo message="${classes.all}" file="${build}/GMI-Classes"/>
	<replaceregexp
		byline="true"
		file="${build}/GMI-Classes"
		flags="g"
		match=".class"
		replace=""/>
	<replaceregexp
		byline="true"
		file="${build}/GMI-Classes"
		flags="g"
		match="\${file.separator}"
		replace="."/>
	<loadfile
		property="gmi-classes"
		srcFile="${build}/GMI-Classes">
	</loadfile>
	<echo	level="debug"
		message="All classes to be rewritten: ${gmi-classes}"/>
	<echo	level="debug"
		message="Run ibis gmi over all classes under ${builddir}${file.separator}"/>
	<java   classname="ibis.frontend.gmi.Main"
		taskname="ibis gmi"
		dir="${builddir}"
		failonerror="true"
		fork="true">
	    <arg line="-dir ${gmi-classes}"/>
	    <classpath refid="default.classpath"/>
	</java>
	<javac	destdir="${builddir}"
		srcdir="${builddir}">
	    <include name="**/group_*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <target name="init" depends="property-init">
	<tstamp/>
	<mkdir dir="${builddir}"/>
	<!--
	<echo message="os.name = ${os.name} os.arch = ${os.arch}"/>
	<echo message="user.name = ${user.name} user.dir = ${user.dir}"/>
	<echo message="java.ext.dirs = ${java.ext.dirs}"/>
	-->
    </target>

    <target name="compile"
	    depends="clean,init,property-init">
	<javac  destdir="${builddir}"
		debug="${java.debug.value}"
		srcdir=".">
	    <classpath refid="default.classpath"/>
	    <include name="*.java"/>
	</javac>
    </target>

    <target name="build"
	    depends="init"
	    description="Compile a GMI program">
	<antcall target="compile"/>
	<antcall target="gmi"/>
	<antcall target="iogen"/>
    </target>

    <target name="clean"
	    description="Clean up the build">
	<delete dir="${build}"/>
    </target>

</project>
