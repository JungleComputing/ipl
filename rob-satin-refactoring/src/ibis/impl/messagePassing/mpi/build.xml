<project
    name="ibis.impl.messagePassing.mpi.native"
    default="build"
    basedir=".">

    <description>
	Compile natives in this directory

	Expect to inherit the following properties:
	    native.dir		the directory of this build
	    ibis		the root of the ibis source tree
	    native-path		${native.dir} relative to ${ibis}
	    build		the root of the ibis build tree
	    default.classpath	a ref property with default classpath

	The shared target definitions require you to define:
	    local.includes	a property that contains include paths specific
				to this module

	Optional:
	    local.lib		the truncated name of the lib you want to create
    </description>

    <property name="closure.lib" value="ibis_mp_mpi"/>

    <property name="ibis" location="../../../.."/>

    <import file="${ibis}/build-files/build-properties.xml">
    <import file="${ibis}/build-files/build-native.xml"/>

    <path id="mpi-local.includes-ref">
	<pathelement path="${native.dir}/../include"/>
	<pathelement path="${package.home.daslib}/include"/>
	<pathelement path="${package.home.mpi}/include"/>
    </path>
    <property name="local.includes" refid="mpi-local.includes-ref"/>

    <property name="das.lib.dir" location="${package.home.daslib}/lib/i386_Linux"/>
    <property name="mpi.lib.dir" location="${package.home.mpi}/lib"/>
    <property name="gm.lib.dir"  location="${package.home.gm}/lib"/>

    <target name="mpi-lib">
	<maplibrary property="library.path" name="${closure.lib}"/>
	<echo level="warning" message="The library is ${library.path}"/>
	<outofdate>
	    <sourcefiles>
		<fileset dir=".">
		    <include name="*.c"/>
		</fileset>
	    </sourcefiles>
	    <targetfiles>
		<pathelement path="${build}/lib/${library.path}"/>
	    </targetfiles>

	    <sequential>
		<cc
			outfile="${build}/lib/${closure.lib}"
			outtype="shared"
			runtime="dynamic"
			warnings="severe"
			name="${c.compiler}"
			debug="${c.debug.value}">
		    <libset dir="${mpi.lib.dir}"   libs="mpich"/>
		    <libset dir="${gm.lib.dir}"    libs="gm"/>
		    <libset dir="${das.lib.dir}"   libs="das"/>
		    <includepath>
			<pathelement path="${local.includes}"/>
			<pathelement path="${default.includes}"/>
		    </includepath>
		    <defineset>
			<define name="NDEBUG" if="c.optimize"/>
		    </defineset>
		    <compilerarg value="${c.optimize}" if="c.optimize"/>
		    <fileset dir="." includes="*.c"/>
		</cc>
	    </sequential>
	</outofdate>
    </target>

    <target name="build"
	    depends="native-init">
	<antcall inheritRefs="true" target="mpi-lib"/>
    </target>

</project>
