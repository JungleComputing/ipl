
base {
    archivesName = "ipl-api"
}

ext {
  pname = 'Ibis Portability Layer: API'
  pdescription = 'API of the Ibis Portability layer'
}

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
    main {
	output.dir(generatedResources, builtBy: 'generateManifest')
    }
}

task generateManifest(type: Copy) {
    from 'IPL_MANIFEST'
    into "$generatedResources/ibis/ipl"
    filter { line -> line.replaceAll('VERSION', "${version}") }
}

clean {
    delete generatedResources
}

javadoc {
    // TODO: is supposed to generate a string
    options.tags = [ "ibis.experimental" ]
    options.overview = "src/overview.html"
}

task copyDeps(type: Copy) {
    dependsOn(":api:jar")
    dependsOn(":api:javadocJar")
    dependsOn(":api:sourcesJar")

    dependsOn(":compile:copyDeps")

    def destination = project.file("$rootDir/lib")

    from(configurations.compileClasspath)
    into project.file(destination)
    eachFile {
        if (it.getRelativePath().getFile(destination).exists()) {
            it.exclude()
        }
    }
}
