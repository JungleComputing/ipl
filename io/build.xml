<project name="ibis-io" default="build" basedir=".">
    <description>
	Build file for ibis-io
    </description>

    <property name="src" location="src" />
    <property name="jmesrc" location="jmesrc" />
    <property name="compile" location="compile" />
    <property name="tmpsrc" location="tmpsrc" />
    <property name="lib" location="../lib" />
    <property name="javadoc" location="../javadoc/io" />
    <property name="external" location="../external" />
    <property name="sources" value="../sources" />

    <property name="version-tag" value="" />

    <property name="jar" location="${lib}/${ant.project.name}${version-tag}.jar" />
    <property name="sources-filename" value="${ant.project.name}${version-tag}-sources" />

    <path id="external_jars">
        <fileset dir="${external}">
            <include name="*.jar" />
            <exclude name="log4jME*.jar" />
            <exclude name="j2meunit*.jar" />
            <exclude name="antenna-*.jar" />
        </fileset>
        <fileset dir="${lib}">
            <include name="*.jar" />
        </fileset>
    </path>


    <target name="properties-jme" description="Set all the properties for JME building">
        <property name="jme-jar" location="${lib}/${ant.project.name}-jme${version-tag}.jar" />
        <property name="jme-sources-filename" value="${ant.project.name}-jme${version-tag}-sources" />

        <!-- Setup antenna for building the JME stuff -->
        <taskdef resource="antenna.properties" classpath="${external}/antenna-bin-1.0.0.jar" />
        <!-- What versions of JME we target. This is the minimum we can support. -->
        <property name="wtk.cldc.version" value="1.1" />
        <property name="wtk.midp.version" value="2.0" />
        <property name="wtk.optionalpda.enabled" value="true" />

        <property name="jme-javadoc" location="${javadoc}-jme" />

        <!-- Jars used for building JME version -->
        <path id="jme_build_jars">
            <fileset dir="${external}">
                <include name="log4jME*.jar" />
                <include name="j2meunit*.jar" />
            </fileset>
        </path>

        <!-- Check the WTK environment variable -->

        <property environment="env" />
        <property name="wtk.home" value="${env.WTK_HOME}" />
        <available property="wtk.exists" file="${env.WTK_HOME}" />

        <!-- Should we preverify the resulting jar? -->
        <property name="wtk.preverify" value="false" />

    </target>

    <target name="build" description="Build the ibis-io distribution." depends="build-jse,warn-jme,build-jme" />

    <target name="build-jse" description="Build the standard edition version of ibis-io" depends="clean">
        <!-- Create the time stamp -->
        <tstamp />

        <!-- Create the build directory structure used by compile -->
        <delete dir="${compile}" />

        <mkdir dir="${compile}" />
        <mkdir dir="${tmpsrc}" />
        <mkdir dir="${sources}" />

        <!-- Collect all the source into one place. -->
        <copy todir="${tmpsrc}">
            <fileset dir="${src}" />
        </copy>

        <!-- Compile the java code from ${src} into ${compile} -->
        <javac srcdir="${tmpsrc}" destdir="${compile}" debug="on" source="1.5" target="1.5">
            <classpath refid="external_jars" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>

        <!-- Put everything in ${compile} into the jar file -->
        <jar jarfile="${jar}" basedir="${compile}">
            <manifest>
                <attribute name="Ibisc-Component" value="ibis.io.rewriter.IOGenerator" />
            </manifest>
            <metainf dir=".." includes="LICENSE.txt" />
        </jar>

        <!-- create a zip file with the sources -->
        <zip destfile="${sources}/${sources-filename}.zip">
            <zipfileset dir="${tmpsrc}" includes="**/*.java" prefix="${sources-filename}" />
            <zipfileset dir="." includes="LICENSE.txt" prefix="${sources-filename}" />
        </zip>

        <!-- And delete the build dir -->
        <delete dir="${compile}" />
        <delete dir="${tmpsrc}" />
    </target>

    <target name="javadoc" description="create javadoc">
        <delete dir="${javadoc}" />
        <mkdir dir="${javadoc}" />

        <javadoc packagenames="ibis.io,ibis.io.nio,ibis.io.rewriter" destdir="${javadoc}" access="public" sourcepath="${src}">
            <classpath refid="external_jars" />
            <link href="http://logging.apache.org/log4j/docs/api/" />
            <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
        </javadoc>
    </target>


    <target name="warn-jme" unless="wtk.exists" depends="properties-jme">
        <echo>WARNING: WTK_HOME not set!</echo>
        <echo>Skipping build of the JME version of Ibis IO!</echo>
        <echo>Please set WTK_HOME in your environment to the location of your Wireless Toolkit if you wish to build JME support.</echo>
        <echo>You can download a wireless toolkit here: http://java.sun.com/products/sjwtoolkit/</echo>
    </target>

    <target name="build-jme" if="wtk.exists" depends="build-jse,properties-jme" description="Build the micro edition version of ibis-io">

        <!-- Create the time stamp -->
        <tstamp />

        <!-- Create the build directory structure used by compile -->
        <delete dir="${tmpsrc}" />
        <delete dir="${compile}" />
        <delete dir="${jme-javadoc}" />

        <mkdir dir="${compile}" />
        <mkdir dir="${tmpsrc}" />
        <mkdir dir="${jme-javadoc}" />
        <mkdir dir="${sources}" />

        <!-- Collect all the source into one place. 
	This is required since wtkbuild doesn't respect includes 
	properly -->
        <copy todir="${tmpsrc}">
            <fileset dir="${src}" includes="ibis/io/SerializationInput.*,ibis/io/SerializationOutput.*,ibis/io/DataInput.*,ibis/io/DataOutput.*,ibis/io/Replacer.*" />
            <fileset dir="${jmesrc}" />
        </copy>

        <!-- create the javadoc -->
        <javadoc destdir="${jme-javadoc}" access="public">
            <packageset dir="${tmpsrc}" />
            <classpath refid="jme_build_jars" />
            <link href="http://logging.apache.org/log4j/docs/api/" />
            <link href="http://java.sun.com/javame/reference/apis/jsr139/" />
            <link href="http://java.sun.com/javame/reference/apis/jsr118/" />
        </javadoc>

        <!-- Compile the java code from ${tmpsrc} into ${compile} -->
        <wtkbuild srcdir="${tmpsrc}" source="1.3" debug="off" target="1.3" destdir="${compile}" preverify="${wtk.preverify}">
            <classpath refid="jme_build_jars" />
        </wtkbuild>

        <!-- Put everything in ${compile} into the jar file -->
        <jar jarfile="${jme-jar}" basedir="${compile}">
            <manifest>
                <attribute name="Ibisc-Component" value="ibis.io.rewriter.IOGenerator" />
            </manifest>
        </jar>

        <!-- create a zip file with the sources -->
        <zip destfile="${sources}/${jme-sources-filename}.zip">
            <zipfileset dir="${tmpsrc}" includes="**/*.java" prefix="${jme-sources-filename}" />
            <zipfileset dir="." includes="LICENSE.txt" prefix="${jme-sources-filename}" />
        </zip>

        <!-- And delete the build dir -->
        <delete dir="${compile}" />
        <delete dir="${tmpsrc}" />
    </target>

    <target name="clean" description="clean up">
        <delete dir="${lib}/${jar}" />
        <delete dir="${lib}/${jme-jar}" />
        <delete dir="${compile}" />
        <delete dir="${tmpsrc}" />
        <delete dir="${jme-javadoc}" />
        <delete dir="${javadoc}" />
        <delete dir="${sources}/{$sources-filename}" />
        <delete dir="${sources}/{$jme-sources-filename}" />
    </target>

</project>
