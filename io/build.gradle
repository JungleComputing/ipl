apply from: "${rootProject.rootDir}/gradle/sub.gradle"

base {
    archivesName = "ibis-io"
}    

dependencies {
    implementation group: 'org.apache.bcel', name: 'bcel', version: '6.4.0'
    implementation group: 'org.ow2.asm', name: 'asm', version: '9.7'
    implementation group: 'org.ow2.asm', name: 'asm-util', version: '9.7'
    implementation group: 'org.objenesis', name: 'objenesis', version: '3.4'
    implementation project(path: ':util')
    implementation project(path: ':compile')
}

ext {
  pname = 'Ibis Portability Layer: IO'
  pdescription = 'Ibis-IO is the IO implementation of IPL. This includes serialization and bytecode rewriting for Ibis serialization'
}

jar {
    manifest {
        attributes("Ibisc-Component": "ibis.io.rewriter.ASMIOGenerator")
    }
}

task copyDeps(type: Copy) {
    dependsOn(":io:jar")
    dependsOn(":io:javadocJar")
    dependsOn(":io:sourcesJar")

    dependsOn(":api:copyDeps")

    def destination = project.file("$rootDir/lib")
    from(configurations.compileClasspath)
    into destination
    eachFile {
        if (it.getRelativePath().getFile(destination).exists()) {
            it.exclude()
        }
    }
}
