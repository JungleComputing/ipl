#!/bin/sh

PRG="$0"

# resolve symlinks
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
    else
    PRG=`dirname "$PRG"`"/$link"
    fi
done

dir=`dirname "$PRG"`
dir=`cd "$dir" && pwd`

. $dir/../configuration.sh

echo "WARNING: run_ibis will be deprecated; use ibis-run (or, for prun users, ibis-prun) instead!"

#start of script template

if [ -z "$1" -o $# -le 2 ]
then
	echo "Usage:"
	echo "  run_ibis <PROC_NR> <TOTAL_NR_PROCS> <NAMESERVER_POOL> <NAMESERVER_HOSTNAME>:<NAMESERVER_PORT> <CLASS NAME> <APPLICATION PARAMS>"
	echo "or, when using prun:"
	echo "  prun -1 -v run_ibis <TOTAL_NR_PROCS> <NAMESERVER_HOSTNAME>:<NAMESERVER_PORT> <CLASS NAME> <APPLICATION PARAMS>"
	exit 1
fi

JAVACLASSPATH=$CLASSPATH:build:$IBIS_ROOT/classlibs:$IBIS_ROOT/lib/ibis.jar:

#needed for ibm 1.3 JITs and SMPs
#does not work anymore --Rob
#export LD_ASSUME_KERNEL=2.2.5

#disable panda interrupts
#export IBP_NO_INTR=1

# fix panda/lfc flow control
#export LFC_SEND_COPY_ASIDE=1
#export PAN_SYS_CREDITS=65535

if [ -z "$LFC_INTR_FIRST" ] ; then
	export LFC_INTR_FIRST=100
fi
if [ -z "$IBP_SEND_SYNC" ] ; then
# this can deadlock, just use 0 for now...
#	export IBP_SEND_SYNC=10000
	export IBP_SEND_SYNC=0
fi
if [ -z "$PAN_COMM_NO_IDLE_POLL" ] ; then
	export PAN_COMM_NO_IDLE_POLL=1
fi

#not needed any more, and not portable --Rob
#Dlibpath="-Dsun.boot.library.path=$IBIS_ROOT/lib/natives:$JAVA_ROOT/jre/bin:$JAVA_ROOT/jre/lib/i386"

Dlibpath="-Djava.library.path=$IBIS_ROOT/lib/natives:.::"

# This is the location where all ibis native libs must go.
# It must be *one* dir.
Dibislibs="-Dibis.library.path=$IBIS_ROOT/lib/natives"

Dpool_host_num="-Dibis.pool.host_number=$1"

#PROFILING=-Xhprof:cpu=samples,file=profile.$1,depth=3
PROFILING=
shift

Dpool_total="-Dibis.pool.total_hosts=$1"
shift

if [ -z "$PRUN_ENV" ]
then
    Dns_pool="-Dibis.name_server.key=$1"
    shift
else
    Dns_pool="-Dibis.name_server.key=$PRUN_ENV"
fi

if [ -z "$USE_JAVA_WRAPPER" ]
then
    wrapper_name=""
else
    wrapper_name="$IBIS_ROOT/bin/java_wrapper"
fi

case $1 in
[0-9]*)
    # "old" syntax: <portno> <nameserver-host>
    Dns_port="-Dibis.name_server.port=$1"
    shift
    Dns_server="-Dibis.name_server.host=$1"
    shift
    ;;
*:*)
    # "new" syntax: <nameserver-host>:<portno>
    Dns_port="-Dibis.name_server.port="`expr "$1" : '.*:\(.*\)'`
    Dns_server="-Dibis.name_server.host="`expr "$1" : '\(.*\):.*'`
    shift
    ;;
*)
    # assume <nameserver-host> and default port
    Dns_port=
    Dns_server="-Dibis.name_server.host=$1"
    shift
    ;;
esac

Dpool_names=
if [ ! -z "$HOSTS" ]; then
  Dpool_names="-Dibis.pool.host_names="
fi

# the -Xmx800M must be here for the SUN JIT, it does not allocate enough mem for some satin apps --Rob
# choose 800, so jobs don't start paging.
# use tcp nameserver for now...

$wrapper_name $JAVA_ROOT/bin/java -Dibis.name_server.impl=ibis.impl.nameServer.tcp.NameServerClient $JIT_OPTS -Xmx800M $Dlibpath $Dibislibs $Dpool_host_num $Dpool_total $Dns_pool $Dns_port $Dns_server $Dpool_names"$HOSTS" -Xbootclasspath/p:$JAVACLASSPATH $PROFILING -classpath $JAVACLASSPATH "$@"
