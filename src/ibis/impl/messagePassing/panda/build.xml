<project
    name="ibis.impl.messagePassing.panda.native"
    default="build"
    basedir=".">

    <description>
	Compile natives in this directory

	The shared target definitions require you to define:
	    local.includes	a property that contains include paths specific
				to this module

	Optional:
	    local.lib		the truncated name of the lib you want to create
    </description>

    <property name="local.lib" value="ibis_local_mp_panda"/>
    <property name="closure.lib" value="ibis_mp_panda"/>

    <property name="native.dir" location="."/>
    <property name="ibis" location="../../../../.."/>

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/build-native.xml"/>

    <target name="arch-mac" if="os-is-mac">
	<property name="panda.arch" value="ppc_osX"/>
    </target>

    <target name="arch-unix" if="os-is-unix">
	<property name="panda.arch" value="i386_linux"/>
	<property name="das.lib.dir" location="${package.home.daslib}/lib/i386_Linux"/>
	<property name="gm.lib.dir"  location="${package.home.gm}/lib"/>
	<path id="local.includes-ref">
	    <pathelement path="${package.home.gm}/include"/>
	</path>
    </target>

    <target name="arch-windows" if="os-is-windows">
	<property name="panda.arch" value="i386_win32"/>
	<property name="das.lib.dir" location="${package.home.daslib}/lib/i386_win32"/>
	<property name="gm.lib.dir" location="${package.home.gm}/examples"/>
	<path id="local.includes-ref">
	    <pathelement path="${package.home.gm}"/>
	</path>
    </target>

    <target name="arch-init" depends="property-init,arch-mac,arch-unix,arch-windows">

	<path id="local.includes-ref">
	    <pathelement path="${native.dir}/../include"/>
	    <pathelement path="${package.home.panda}/include"/>
	    <pathelement path="${package.home.panda}/include/${panda.arch}/lfc/no_threads"/>
	    <pathelement path="${package.home.daslib}/include"/>
	</path>
	<property name="local.includes" refid="local.includes-ref"/>
	<echo level="verbose" message="local.includes = ${local.includes}"/>
    </target>

    <target name="panda-init-opt" depends="property-init,native-init,arch-init" if="c.optimize">
	<property
		name="lfc.lib.dir"
		location="${package.home.lfc}/lib/optimized"/>
	<property
		name="panda.lib.dir"
		location="${package.home.panda}/lib/${panda.arch}/lfc-gm/no_threads/optimized"/>
    </target>
    <target name="panda-init-debug" depends="property-init,native-init,arch-init" unless="c.optimize">
	<property
		name="lfc.lib.dir"
		location="${package.home.lfc}/lib/debug"/>
	<property
		name="panda.lib.dir"
		location="${package.home.panda}/lib/${panda.arch}/lfc-gm/no_threads"/>
    </target>

    <target name="panda-init" depends="panda-init-opt,panda-init-debug">
	<!-- ,native-compile -->
	<maplibrary property="library.path" name="${closure.lib}"/>

	<maplibrary
		property="gm.path"
		name="${gm.lib.dir}/libgm.a"
		outtype="static"/>
	<!--  see comments in impl/net/gm/build.xml about libgm.so
	-->
	<copy file="${gm.path}" todir="${ibis}/lib/natives"/>

	<echo level="warning" message="The library is ${library.path}"/>
    </target>

    <target name="chk-uptodate-panda">
	<uptodate property="panda-is-uptodate" targetfile="${ibis}/lib/natives/${library.path}">
	    <srcfiles dir="." includes="*.c"/>
	</uptodate>
    </target>

    <target name="panda-lib" depends="panda-init,property-init,chk-uptodate-panda" unless="panda-is-uptodate">
	<echo message="Panda lib is ${panda.lib.dir}"/>
	<cc
		outfile="${ibis}/lib/natives/${closure.lib}"
		outtype="shared"
		runtime="dynamic"
		warnings="severe"
		incremental="true"
		name="${c.compiler}"
		debug="${c.debug.value}">
		<libset dir="${ibis}/lib/natives"
					   libs="ibis_mp"/>
	    <libset dir="${panda.lib.dir}" libs="panda"/>
	    <libset dir="${lfc.lib.dir}"   libs="lfc"/>
	    <libset dir="${gm.lib.dir}"    libs="gm"/>
	    <libset dir="${das.lib.dir}"   libs="das"/>
	    <includepath>
		<pathelement path="${local.includes}"/>
		<pathelement path="${default.includes}"/>
	    </includepath>
	    <defineset>
		<define name="NDEBUG" if="c.optimize"/>
	    </defineset>
	    <compilerarg value="${c.optimize}" if="c.optimize"/>
	    <fileset dir="." includes="*.c"/>
	</cc>
    </target>

    <target name="build"
	    depends="native-init,arch-init">
	<antcall inheritRefs="true" target="panda-lib"/>
    </target>

</project>
