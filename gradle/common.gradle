apply plugin: 'java'
apply plugin: 'com.github.hierynomus.license'

version = '2.3.3'
group = 'nl.junglecomputing.ipl'

// Prevent warning about POM relocation not being fully supported
configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

license {
    ext.copyright_year = 2010
    ext.copyright_owner = 'Vrije Universiteit'
    header rootProject.file('gradle/HEADER')
    strictCheck true
    excludes(["**/log4j.properties"])
    mapping {
        // IntelliJ IDEA gives "Dangling Javadoc comment." warning when default JAVADOC_STYLE is used,
        // so switch to comment style
        java = 'SLASHSTAR_STYLE'
    }
}

licenseFormat.description = "Applies the license found in the header file in files missing the header"

javadoc {
    options.tags = [ "ibis.experimental" ]
    failOnError = false
    classpath = sourceSets.main.compileClasspath
    options.addBooleanOption("Xdoclint:none", true)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description "Creates jar file of javadoc"
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description "Creates jar file of Java sources"
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

compileJava {
//    options.compilerArgs << '-Xlint:deprecation'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/lib")
}

//compileJava.doLast {
//    def tree = fileTree(dir: "$buildDir/classes/java/main", include: '**/*.class')
//    def checksum
//    ant.checksum(tree, totalproperty: checksum)
//    println "Checksum: $checksum"
//}
//
