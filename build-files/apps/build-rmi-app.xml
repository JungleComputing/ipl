<project
    name="rmi-app"
    default="build"
    basedir=".">

    <description>
	Ibis rmi application build.
    </description>

    <!--
	Optional property 'rmic-flags' can be set to pass extra flags
	    on to Ibisc.
    -->

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/apps/build-run.xml"/>

    <property name="builddir" location="${build}"/>

    <target name="set-to-rmic-flags" if="rmic-flags">
	<property name="rmic-flags.value" value="${rmic-flags}"/>
    </target>

    <target name="set-def-rmic-flags" unless="rmic-flags">
	<property name="rmic-flags.value" value=""/>
    </target>

    <target name="set-rmic-flags"
	depends="set-to-rmic-flags,set-def-rmic-flags"/>

    <target name="rmic"
	    depends="set-rmic-flags">
	    <!-- Commented out; not toplevel.
	    description="Preprocess class files in the build tree for RMI"
	    -->
	<java   classname="ibis.frontend.ibis.Ibisc"
		taskname="Ibisc"
		dir="${builddir}"
		failonerror="true"
		fork="true">
		<arg line="${rmic-flags.value} -rmi -rmi-java2ibis ."/>
	    <classpath refid="default.classpath"/>
	</java>
    </target>

    <target name="rmic-sun">
	    <!-- Commented out; not toplevel.
	    description="Preprocess class files in the build tree for SUN RMI"
	    -->

	<path id="all-classes">
	    <fileset dir="${builddir}">
		<include name="**/*.class"/>
	    </fileset>
	</path>
	<pathconvert pathsep=" " property="classes.all" refid="all-classes">
	    <map from="${builddir}${file.separator}" to=""/>
	</pathconvert>

	<echo message="${classes.all}" file="${build}/-RMIC-Classes"/>
	<replace file="${build}/-RMIC-Classes" token=".class" value=""/>
	<replace file="${build}/-RMIC-Classes" token="${file.separator}" value="."/>
	<loadfile
		property="rmic-classes"
		srcFile="${build}/-RMIC-Classes">
	</loadfile>

	<echo   level="debug"
		message="All classes to be inspected: ${rmic-classes}"/>
	<echo   level="debug"
		message="Run frontend.rmi.Rmic -n -java over all classes under ${build}${file.separator}"/>
	<java   classname="ibis.frontend.rmi.Rmic"
		taskname="rmic locator"
		dir="${builddir}"
		failonerror="true"
		fork="true"
		output="${build}/-REMOTE-Classes">
	    <arg line="-n -java ${rmic-classes}"/>
	    <classpath refid="default.classpath"/>
	</java>
	<loadfile
		property="remote.classes"
		srcFile="${build}/-REMOTE-Classes"/>
	<echo   level="debug"
		message="Now run sun.rmic over '${remote.classes}'"/>
	<rmic   base="${build}"
		includes="${remote.classes}">
	    <classpath refid="default.classpath"/>
	</rmic>
    </target>

    <target name="set-shared">
	<condition property="has-shared">
	    <isset property="shared-dir"/>
	</condition>
    </target>

    <target name="set-srcpath-shared" depends="set-shared" if="has-shared">
	<property name="src-path" value=".:${shared-dir}"/>
    </target>

    <target name="set-srcpath-not-shared" depends="set-shared" unless="has-shared">
	<property name="src-path" value="."/>
    </target>

    <target name="init" depends="property-init,set-srcpath-shared,set-srcpath-not-shared">
	<tstamp/>
	<mkdir dir="${build}"/>
    </target>

    <target name="compile"
	depends="clean,init">
	<javac  destdir="${build}"
		debug="true"
		srcdir="${src-path}">
	    <classpath refid="default.classpath"/>
	    <include name="**/*.java"/>
	</javac>
    </target>

    <target name="build"
	    depends="compile"
	    description="Compile RMI application for Ibis RMI">
	<antcall inheritRefs="true" target="rmic"/>
    </target>

    <target name="build-sun"
	    depends="compile"
	    description="Compile RMI application for Sun RMI">
	<antcall inheritRefs="true" target="rmic-sun"/>
    </target>

    <target name="clean"
	    description="Clean up the build">
	<delete dir="${build}"/>
	<delete file="ant-test.out"/>
    </target>

</project>
