<project
    name="satin-app"
    default="build"
    basedir=".">

    <description>
	Ibis satin application build
    </description>

    <!--
        Requires definition of 'satin-classes': a comma-separated list of class
	    names that must be rewritten.
	Optional definition of 'satinc-flags': extra options to be supplied
	    to Ibisc.
	Backwards compatibility: instead of 'satin-classes', 'satin-main-class'
	    and 'satin-so-class' are also recognized.
    -->

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/apps/build-run.xml"/>

    <target name="property-satin-build" unless="build">
	<echo level="debug"
	      message="build is undefined. Set it to the default value"/>
	<property name="build" location="build"/>
	<mkdir dir="${build}"/>
    </target>

    <target name="satin-init"
	    depends="property-satin-build"/>

    <target name="satin"
	    depends="satin-init">
	<java	classname="ibis.frontend.ibis.Ibisc"
		taskname="Ibisc"
		dir="${build}"
		failonerror="true"
		maxmemory="512M"
		fork="true">
		<arg line="${satinc-flags.value} ${satin-so} ${satin-main} ${satin-classes.value} ."/>
		<classpath refid="default.classpath"/>
	</java>

    </target>

    <target name="init" depends="property-init">
	<tstamp/>
	<mkdir dir="${build}"/>
    </target>

    <target name="compile"
	    depends="clean,init"
	    description="Compile Satin application for sequential execution">
	<javac  destdir="${build}"
		debug="true"
		includes="**/*.java"
		srcdir=".">
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <target name="set-satinc-flags-set" if="satinc-flags">
	<property name="satinc-flags.value" value="${satinc-flags}"/>
    </target>

    <target name="set-satinc-flags-notset" unless="satinc-flags">
	<property name="satinc-flags.value" value=""/>
    </target>

    <target name="set-satinc-main" if="satin-main-class">
	<property name="satin-main" value="-satin &quot;${satin-main-class}&quot;"/>
    </target>

    <target name="set-satinc-main-notset" unless="satin-main-class">
	<property name="satin-main" value=""/>
    </target>

    <target name="set-satinc-so" if="satin-so-class">
	<property name="satin-so" value="-satin &quot;${satin-so-class}&quot;"/>
    </target>

    <target name="set-satinc-so-notset" unless="satin-so-class">
	<property name="satin-so" value=""/>
    </target>

    <target name="set-satinc-classes" if="satin-classes">
	<property name="satin-classes.value" value="-satin &quot;${satin-classes}&quot;"/>
    </target>

    <target name="set-satinc-classes-notset" unless="satin-classes">
	<property name="satin-classes.value" value=""/>
    </target>

    <target name="do-satin"
	depends="set-satinc-flags-set,set-satinc-flags-notset,set-satinc-main-notset,set-satinc-main,set-satinc-classes,set-satinc-classes-notset,set-satinc-so-notset,set-satinc-so,satin">
    </target>

    <target name="build"
	description="Compile Satin application for parallel execution"
	depends="compile,do-satin"/>

    <target name="clean">
	<delete dir="${build}"/>
	<delete file="ant-test.out"/>
    </target>

</project>
