<project
    name="satin-app"
    default="build"
    basedir=".">

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/build-iogen.xml"/>
    <import file="${ibis}/build-files/build-native.xml"/>
    <import file="${ibis}/build-files/apps/build-run.xml"/>

    <description>
	Ibis satin application build
    </description>

    <target name="property-satin-build" unless="build">
	<echo message="build is undefined. Set it to the default value"/>
	<property name="build" location="build"/>
	<mkdir dir="${build}"/>
    </target>

    <target name="satin-init"
	    depends="property-satin-build,property-init"/>

    <target name="satin"
	    depends="satin-init">
	<java	classname="ibis.frontend.satin.Satinc"
		taskname="Satinc"
		dir="${build}"
		failonerror="true"
		maxmemory="256M"
		fork="true">
		<arg line="-dir ${satinc-flags.value} ${satinc-files}"/>
		<classpath refid="default.classpath"/>
	</java>

    </target>

    <target name="init">
	<tstamp/>
	<mkdir dir="${build}"/>
	<condition property="src.excludes-ref.exists">
	    <isreference refid="src.excludes-ref"/>
	</condition>
    </target>

    <target name="do-excludes" if="src.excludes-ref.exists">
	<property name="pwd" location="."/>
	<pathconvert pathsep="${line.separator}" property="src.excludes" refid="src.excludes-ref">
	    <map from="${pwd}${file.separator}" to=""/>
	</pathconvert>
	<echo message="${src.excludes}" file="${build}/excludes"/>
    </target>

    <target name="compile"
	    depends="init,property-init,do-excludes"
	    description="Compile Satin application for sequential execution">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		includes="**/*.java"
		excludes="${build}/*.java"
		srcdir=".">
	    <classpath refid="default.classpath"/>
	    <excludesfile name="${build}/excludes" if="src.excludes"/>
	</javac>
    </target>

    <target name="build-no-satin">
	<antcall inheritAll="true" inheritRefs="true" target="compile"/>
    </target>

    <target name="set-fl-no-set" if="satinc-flags">
	<property name="satinc-flags.value" value="${satinc-flags} -no-so"/>
    </target>

    <target name="set-fl-no-notset" unless="satinc-flags">
	<property name="satinc-flags.value" value="-no-so"/>
    </target>

    <target name="set-satin-flags-no-so"
	depends="set-fl-no-set,set-fl-no-notset"/>
    
    <target name="build-no-so"
	    depends="set-satin-flags-no-so"
	    description="Compile Satin application for parallel execution">
	<property name="satinc-files" value="${satin-main-class}"/>

	<antcall inheritAll="true" inheritRefs="true" target="compile"/>
	<antcall inheritRefs="true" target="satin"/>
    	<antcall inheritRefs="true" target="iogen"/>
    </target>

    <target name="set-satinc-files-so" if="satin-so-classes">
	<property name="satinc-files" value="${satin-main-class} ${satin-so-classes}"/>
    </target>

    <target name="set-satinc-files" unless="satin-so-classes">
	<property name="satinc-files" value="${satin-main-class}"/>
    </target>

    <target name="set-satinc-flags-set" if="satinc-flags">
	<property name="satinc-flags.value" value="${satinc-flags}"/>
    </target>

    <target name="set-satinc-flags-notset" unless="satinc-flags">
	<property name="satinc-flags.value" value=""/>
    </target>

    <target name="do-satin"
	depends="set-satinc-files-so,set-satinc-files,set-satinc-flags-set,set-satinc-flags-notset">
	<antcall inheritRefs="true" target="satin"/>
    </target>

    <target name="build"
	    description="Compile Satin application for parallel execution">
	<antcall inheritAll="true" inheritRefs="true" target="compile"/>
	<antcall inheritRefs="true" target="do-satin"/>
	<antcall inheritRefs="true" target="iogen"/>
    </target>

    <target name="clean">
	<delete dir="${build}"/>
    </target>

</project>
