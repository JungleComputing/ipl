apply from: "${rootProject.rootDir}/gradle/impl.gradle"

base {
    archivesName = 'ipl-impl-dummy'
}    

jar {
    manifest {
        attributes("Ibis-Starter-Class": "ibis.ipl.impl.multi.MultiIbisStarter",
		   "Ibis-IPL-Version": version,
                   "Ibis-Implementation-Version": "Multi$version",	// TODO: create checksum
		   "Ibis-NickName": "multi")
   }
}

ext {
  pname = 'Ibis Portability layer: stacking dummy'
  pdescription = 'Stacking dummy Ibis is a stacking IPL implementation; that is, it adds some capability to an underlying IPL implementation, in this case nothing, but it illustrates how to write a stacking IPL'
}

jar {
    manifest {
        attributes("Ibis-Starter-Class": "ibis.ipl.impl.dummy.StackingIbisStarter",
		   "Ibis-IPL-Version": version,
                   "Ibis-Implementation-Version": "dummy$version",	// TODO: create checksum
		   "Ibis-NickName": "dummy")
    }
}

task copyDeps(type: Copy) {
    dependsOn(":impl-stacking-dummy:jar")
    dependsOn(":impl-stacking-dummy:javadocJar")
    dependsOn(":impl-stacking-dummy:sourcesJar")

    dependsOn(":impl-multi:copyDeps")

    def destination = project.file("$rootDir/lib")
    from(configurations.compileClasspath)
    into destination
    eachFile {
        if (it.getRelativePath().getFile(destination).exists()) {
            it.exclude()
        }
    }
}
