<project
    name="build-config"
    default="configure"
    basedir=".">

    <description>
      Install-time configuration.
      Figure out where the packages are that we depend on.
    </description>

    <target name="config.previous"
	    depends="config-workstation"
	    if="config.has-previous">
	<echo message="Read previous configuration from build-properties.cache"/>
	<property file="build-files/build-properties.cache"/>
    </target>

    <target name="config.workstation"
	    depends="config-workstation"
	    if="config.is-workstation">
	    <property file="${ibis}/build-files/build-properties.default"/>
    </target>

    <target name="config-workstation">
	<condition property="config.has-previous">
	    <available file="build-files/build-properties.cache"/>
	</condition>
	<condition property="config.is-workstation">
	    <not>
		<isset property="config.has-previous"/>
	    </not>
	</condition>
    </target>

    <condition property="java-ok">
	<or>
	    <contains string="${java.version}" substring="1.4"/>
	    <contains string="${java.version}" substring="1.5"/>
	    <contains string="${java.version}" substring="1.6"/>
	</or>
    </condition>

    <target name="java-version-test" depends="java-home-test" unless="java-ok">
	<fail message="Java version ${java.version} is not supported. A 1.4, 1.5 or 1.6 version is required for Ibis.">
	</fail>
    </target>

    <target name="java-home-test" unless="env.JAVA_HOME">
	<fail>Environment variable JAVA_HOME is not set!</fail>
    </target>

    <target name="config-init"
	    depends="java-version-test,config.workstation,config.previous">
	<property name="JAVA_HOME_ENV" value="${env.JAVA_HOME}"/>
    </target>

    <property environment="env"/>

    <target name="-config-defaults" unless="called-from-configure">
	<property name="install.home.gm" value="${default.home.gm}"/>
	<property name="install.home.daslib" value="${default.home.daslib}"/>
	<property name="install.home.lfc" value="${default.home.lfc}"/>
	<property name="install.home.panda" value="${default.home.panda}"/>
	<property name="install.home.mpi" value="${default.home.mpi}"/>
    </target>

    <target name="-config-build-1" depends="-config-defaults">
	<property name="config.home.gm" location="${install.home.gm}"/>
	<property name="config.home.daslib" location="${install.home.daslib}"/>
	<property name="config.home.lfc" location="${install.home.lfc}"/>
	<property name="config.home.panda" location="${install.home.panda}"/>
	<property name="config.home.mpi" location="${install.home.mpi}"/>

	<delete file="build-files/build-properties.cache"/>
	<echo	file="build-files/build-properties.cache"
		append="true">default.home.panda  = ${config.home.panda}
</echo>
	<echo	file="build-files/build-properties.cache"
		append="true">default.home.daslib = ${config.home.daslib}
</echo>
	<echo	file="build-files/build-properties.cache"
		append="true">default.home.lfc    = ${config.home.lfc}
</echo>
	<echo	file="build-files/build-properties.cache"
		append="true">default.home.mpi    = ${config.home.mpi}
</echo>
	<echo	file="build-files/build-properties.cache"
		append="true">default.home.gm     = ${config.home.gm}
</echo>
	<replace
	    file="${ibis}/build-files/build-properties.cache"
		token="${file.separator}"
		value="/"/>

	    <copy	file="${ibis}/build-files/build-properties"
		tofile="${ibis}/build-files/build-properties.backup"
		failonerror="false"
		overwrite="true">
	</copy>
	<copy	file="${ibis}/src/scripts/build-properties.in"
		tofile="${ibis}/build-files/build-properties"
		overwrite="true">
	</copy>

	<replace
	    file="${ibis}/build-files/build-properties"
		token="@GM_HOME@"
		value="${config.home.gm}"/>
	<replace
	    file="${ibis}/build-files/build-properties"
		token="@DASLIB_HOME@"
		value="${config.home.daslib}"/>
	<replace
	    file="${ibis}/build-files/build-properties"
		token="@LFC_HOME@"
		value="${config.home.lfc}"/>
	<replace
	    file="${ibis}/build-files/build-properties"
		token="@PANDA_HOME@"
		value="${config.home.panda}"/>
	<replace
	    file="${ibis}/build-files/build-properties"
		token="@MPI_HOME@"
		value="${config.home.mpi}"/>
	<replace
	    file="${ibis}/build-files/build-properties"
		token="${file.separator}"
		value="/"/>

	<condition property="is-windows">
	    <os family="windows"/>
	</condition>

	<mkdir dir="${ibis}/bin"/>

	<copy
		file="${ibis}/src/scripts/ns-env.in"
		tofile="${ibis}/bin/ns-env"/>
	<replace file="${ibis}/bin/ns-env" token="@IBIS_NS_PORT@" value="9826"/>
	<replace file="${ibis}/bin/ns-env" token="@IBIS_NS_HOST@" value="localhost"/>
	<replace file="${ibis}/bin/ns-env" token="@SET@" value=""/>
	<chmod file="${ibis}/bin/ns-env" perm="+x"/>
    </target>

    <target name="-config-build-windows" if="is-windows">
	<copy
		file="${ibis}/src/scripts/ns-env.in"
		tofile="${ibis}/bin/ns-env.bat">
	</copy>
	<replace file="${ibis}/bin/ns-env.bat" token="@IBIS_NS_PORT@" value="9826"/>
	<replace file="${ibis}/bin/ns-env.bat" token="@IBIS_NS_HOST@" value="localhost"/>
	<replace file="${ibis}/bin/ns-env.bat" token="@SET@" value="set "/>
	<replace file="${ibis}/bin/ns-env.bat" token="#" value="rem "/>
	<replace file="${ibis}/bin/ns-env.bat" token="export" value="rem "/>
    </target>

    <target name="set-ibis-configured" if="called-from-configure">
	<echo	file="build-files/build-properties"
		append="true">ibis.configured     = true
</echo>
    </target>

    <target name="-config-build-properties"
	depends="-config-build-1,set-ibis-configured,-config-build-windows"/>

    <target name="-config-lazy-build-properties"
	    unless="build-properties-available">
	<antcall inheritRefs="true" target="-config-build-properties"/>
    </target>


    <target name="config-init-initial" depends="config-init">
	<condition property="build-properties-available">
	    <available file="build-files/build-properties"/>
	</condition>
	<antcall inheritRefs="true" target="-config-lazy-build-properties"/>
    </target>

    <target name="configure"
	    depends="config-init"
	    description="Ibis build configuration for high-speed LAN modules">

	<input
		message="Please enter the install directory of gm: [${default.home.gm}] "
		addproperty="install.home.gm"
		defaultvalue="${default.home.gm}"/>
	<input
		message="Please enter the install directory of daslib: [${default.home.daslib}] "
		addproperty="install.home.daslib"
		defaultvalue="${default.home.daslib}"/>
	<input
		message="Please enter the install directory of lfc: [${default.home.lfc}] "
		addproperty="install.home.lfc"
		defaultvalue="${default.home.lfc}"/>
	<input
		message="Please enter the install directory of panda: [${default.home.panda}] "
		addproperty="install.home.panda"
		defaultvalue="${default.home.panda}"/>
	<input
		message="Please enter the install directory of mpi: [${default.home.mpi}] "
		addproperty="install.home.mpi"
		defaultvalue="${default.home.mpi}"/>

	<property name="called-from-configure" value="true"/>
	<antcall inheritRefs="true" target="-config-build-properties"/>
    </target>

</project>
