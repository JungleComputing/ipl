%!PS-Adobe-2.0 EPSF-2.0
%%Title: gmi-abstract.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Dec 16 14:23:02 2004
%%For: jason@galadriel ()
%%BoundingBox: 0 0 796 419
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.324 0.312 0.309 srgb} bind def
/col33 {0.578 0.578 0.578 srgb} bind def

end
save
newpath 0 419 moveto 0 0 lineto 796 0 lineto 796 419 lineto closepath clip newpath
0.8 431.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 60
% Polyline
7.500 slw
n 0 225 m 12600 225 l 12600 6840 l 0 6840 l
 cp gs col7 1.00 shd ef gr gs col7 s gr 
% here ends figure;
% 
% here starts figure with depth 52
% Polyline
2 slj
15.000 slw
n 1323 2700 m 1325 2702 l 1328 2707 l 1334 2715 l 1342 2726 l 1352 2740 l
 1362 2756 l 1373 2774 l 1383 2794 l 1392 2815 l 1400 2838 l
 1407 2864 l 1411 2893 l 1413 2925 l 1411 2956 l 1407 2983 l
 1401 3004 l 1393 3019 l 1385 3028 l 1377 3034 l 1368 3038 l
 1359 3041 l 1351 3047 l 1343 3056 l 1335 3071 l 1329 3092 l
 1325 3119 l 1323 3150 l 1325 3181 l 1329 3208 l 1335 3229 l
 1343 3244 l 1351 3253 l 1359 3259 l 1368 3263 l 1377 3266 l
 1385 3272 l 1393 3281 l 1401 3296 l 1407 3317 l 1411 3344 l
 1413 3375 l 1411 3406 l 1407 3433 l 1401 3454 l 1393 3469 l
 1385 3478 l 1377 3484 l 1368 3488 l 1359 3491 l 1351 3497 l
 1343 3506 l 1335 3521 l 1329 3542 l 1325 3569 l 1323 3600 l
 1325 3632 l 1329 3661 l 1336 3687 l 1344 3710 l 1353 3731 l
 1363 3751 l 1374 3769 l 1384 3785 l 1394 3799 l 1402 3810 l
 1408 3818 l 1411 3823 l
 1413 3825 l gs col33 s gr 
% Polyline
n 1314 2700 m 1316 2702 l 1319 2707 l 1325 2715 l 1333 2726 l 1343 2740 l
 1353 2756 l 1364 2774 l 1374 2794 l 1383 2815 l 1391 2838 l
 1398 2864 l 1402 2893 l 1404 2925 l 1402 2956 l 1398 2983 l
 1392 3004 l 1384 3019 l 1376 3028 l 1368 3034 l 1359 3038 l
 1350 3041 l 1342 3047 l 1334 3056 l 1326 3071 l 1320 3092 l
 1316 3119 l 1314 3150 l 1316 3181 l 1320 3208 l 1326 3229 l
 1334 3244 l 1342 3253 l 1350 3259 l 1359 3263 l 1368 3266 l
 1376 3272 l 1384 3281 l 1392 3296 l 1398 3317 l 1402 3344 l
 1404 3375 l 1402 3406 l 1398 3433 l 1392 3454 l 1384 3469 l
 1376 3478 l 1368 3484 l 1359 3488 l 1350 3491 l 1342 3497 l
 1334 3506 l 1326 3521 l 1320 3542 l 1316 3569 l 1314 3600 l
 1316 3632 l 1320 3661 l 1327 3687 l 1335 3710 l 1344 3731 l
 1354 3751 l 1365 3769 l 1375 3785 l 1385 3799 l 1393 3810 l
 1399 3818 l 1402 3823 l
 1404 3825 l gs col32 s gr 
% Polyline
0 slj
0.000 slw
n 6840 6345 m 6750 6345 6750 6660 90 arcto 4 {pop} repeat
  6750 6750 10035 6750 90 arcto 4 {pop} repeat
  10125 6750 10125 6435 90 arcto 4 {pop} repeat
  10125 6345 6840 6345 90 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr 
% Polyline
n 6840 3060 m 6750 3060 6750 3375 90 arcto 4 {pop} repeat
  6750 3465 10035 3465 90 arcto 4 {pop} repeat
  10125 3465 10125 3150 90 arcto 4 {pop} repeat
  10125 3060 6840 3060 90 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr 
% Polyline
n 420 4860 m 315 4860 315 5160 105 arcto 4 {pop} repeat
  315 5265 5520 5265 105 arcto 4 {pop} repeat
  5625 5265 5625 4965 105 arcto 4 {pop} repeat
  5625 4860 420 4860 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr 
% Polyline
n 315 4815 m 5625 4815 l 5625 4905 l 315 4905 l
 cp gs col6 1.00 shd ef gr 
% Polyline
n 6750 6300 m 10125 6300 l 10125 6390 l 6750 6390 l
 cp gs col6 1.00 shd ef gr 
% Polyline
n 6750 3015 m 10125 3015 l 10125 3105 l 6750 3105 l
 cp gs col6 1.00 shd ef gr 
/Helvetica-Bold ff 225.00 scf sf
4365 4680 m
gs 1 -1 sc (stub) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
4365 4410 m
gs 1 -1 sc (generated) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
1440 4680 m
gs 1 -1 sc (thread) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
1440 4410 m
gs 1 -1 sc (application) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
2 slj
15.000 slw
n 1305 2700 m 1307 2702 l 1310 2707 l 1316 2715 l 1324 2726 l 1334 2740 l
 1344 2756 l 1355 2774 l 1365 2794 l 1374 2815 l 1382 2838 l
 1389 2864 l 1393 2893 l 1395 2925 l 1393 2956 l 1389 2983 l
 1383 3004 l 1375 3019 l 1367 3028 l 1359 3034 l 1350 3038 l
 1341 3041 l 1333 3047 l 1325 3056 l 1317 3071 l 1311 3092 l
 1307 3119 l 1305 3150 l 1307 3181 l 1311 3208 l 1317 3229 l
 1325 3244 l 1333 3253 l 1341 3259 l 1350 3263 l 1359 3266 l
 1367 3272 l 1375 3281 l 1383 3296 l 1389 3317 l 1393 3344 l
 1395 3375 l 1393 3406 l 1389 3433 l 1383 3454 l 1375 3469 l
 1367 3478 l 1359 3484 l 1350 3488 l 1341 3491 l 1333 3497 l
 1325 3506 l 1317 3521 l 1311 3542 l 1307 3569 l 1305 3600 l
 1307 3632 l 1311 3661 l 1318 3687 l 1326 3710 l 1335 3731 l
 1345 3751 l 1356 3769 l 1366 3785 l 1376 3799 l 1384 3810 l
 1390 3818 l 1393 3823 l
 1395 3825 l gs col0 s gr 
/Helvetica-Bold ff 225.00 scf sf
2880 4680 m
gs 1 -1 sc (interface) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
2880 4410 m
gs 1 -1 sc (group) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
0 slj
7.500 slw
n 6750 6300 m
 10125 6300 l gs col0 s gr 
/Helvetica-Bold ff 225.00 scf sf
7605 6165 m
gs 1 -1 sc (skeleton) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
7605 5895 m
gs 1 -1 sc (generated) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 6750 3015 m
 10125 3015 l gs col0 s gr 
/Helvetica-Bold ff 225.00 scf sf
7605 2880 m
gs 1 -1 sc (skeleton) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
7605 2610 m
gs 1 -1 sc (generated) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
11205 4905 m
gs 1 -1 sc (two objects) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
11205 4635 m
gs 1 -1 sc (group of) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
30.000 slw
 [120] 0 sd
n 4365 3240 450 450 0 360 DrawEllipse gs /PC [[1.00 1.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 261.00 186.00] PATmp PATsp ef gr PATusp gs col0 s gr
 [] 0 sd
% Ellipse
 [120] 0 sd
n 7605 4725 450 450 0 360 DrawEllipse gs /PC [[1.00 1.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 477.00 285.00] PATmp PATsp ef gr PATusp gs col0 s gr
 [] 0 sd
% Ellipse
n 9315 4725 450 450 0 360 DrawEllipse gs col6 1.00 shd ef gr gs col0 s gr

% Ellipse
 [120] 0 sd
n 7605 1440 450 450 0 360 DrawEllipse gs /PC [[1.00 1.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 477.00 66.00] PATmp PATsp ef gr PATusp gs col0 s gr
 [] 0 sd
% Ellipse
n 9315 1440 450 450 0 360 DrawEllipse gs col6 1.00 shd ef gr gs col0 s gr

% Ellipse
7.500 slw
 [60] 0 sd
n 9315 3105 990 2475 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Polyline
n 315 4815 m
 5625 4815 l gs col0 s gr 
% Polyline
n 435 2115 m 315 2115 315 5145 120 arcto 4 {pop} repeat
  315 5265 5505 5265 120 arcto 4 {pop} repeat
  5625 5265 5625 2235 120 arcto 4 {pop} repeat
  5625 2115 435 2115 120 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
3930 3300 m 3930 3180 l 3643 3180 l 3883 3240 l 3643 3300 l cp
eoclip
n 3105 3240 m
 3915 3240 l gs col0 s gr gr

% arrowhead
n 3643 3300 m 3883 3240 l 3643 3180 l 3643 3300 l  cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
2715 3300 m 2715 3180 l 2428 3180 l 2668 3240 l 2428 3300 l cp
eoclip
n 1440 3240 m
 2700 3240 l gs col0 s gr gr

% arrowhead
n 2428 3300 m 2668 3240 l 2428 3180 l 2428 3300 l  cp gs col7 1.00 shd ef gr  col0 s
% Polyline
 [15 15] 15 sd
gs  clippath
7158 1478 m 7084 1383 l 6857 1560 l 7084 1460 l 6931 1654 l cp
eoclip
n 4799 3240 m
 7110 1440 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 6931 1654 m 7084 1460 l 6857 1560 l  col0 s
% Polyline
30.000 slw
n 2805 2700 m 2700 2700 2700 3720 105 arcto 4 {pop} repeat
  2700 3825 2955 3825 105 arcto 4 {pop} repeat
  3060 3825 3060 2805 105 arcto 4 {pop} repeat
  3060 2700 2805 2700 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% Polyline
15.000 slw
 [15 15] 15 sd
gs  clippath
7139 4792 m 7203 4691 l 6960 4536 l 7131 4716 l 6896 4637 l cp
eoclip
n 4815 3240 m
 7159 4734 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 6896 4637 m 7131 4716 l 6960 4536 l  col0 s
% Polyline
7.500 slw
n 6855 3600 m 6750 3600 6750 6645 105 arcto 4 {pop} repeat
  6750 6750 10020 6750 105 arcto 4 {pop} repeat
  10125 6750 10125 3705 105 arcto 4 {pop} repeat
  10125 3600 6855 3600 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
8880 4785 m 8880 4665 l 8593 4665 l 8833 4725 l 8593 4785 l cp
eoclip
n 8055 4725 m
 8865 4725 l gs col0 s gr gr

% arrowhead
n 8593 4785 m 8833 4725 l 8593 4665 l 8593 4785 l  cp gs col7 1.00 shd ef gr  col0 s
% Polyline
7.500 slw
n 6855 315 m 6750 315 6750 3360 105 arcto 4 {pop} repeat
  6750 3465 10020 3465 105 arcto 4 {pop} repeat
  10125 3465 10125 420 105 arcto 4 {pop} repeat
  10125 315 6855 315 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
8880 1500 m 8880 1380 l 8593 1380 l 8833 1440 l 8593 1500 l cp
eoclip
n 8055 1440 m
 8865 1440 l gs col0 s gr gr

% arrowhead
n 8593 1500 m 8833 1440 l 8593 1380 l 8593 1500 l  cp gs col7 1.00 shd ef gr  col0 s
% Polyline
2 slj
 [60] 0 sd
gs  clippath
10428 3291 m 10421 3365 l 10635 3387 l 10520 3338 l 10643 3312 l cp
eoclip
n 11160 4365 m 11160 4362 l 11160 4356 l 11160 4345 l 11160 4329 l 11159 4306 l
 11159 4279 l 11158 4247 l 11158 4211 l 11157 4174 l 11156 4136 l
 11155 4098 l 11154 4062 l 11152 4027 l 11151 3994 l 11149 3963 l
 11148 3935 l 11146 3909 l 11144 3884 l 11142 3861 l 11139 3839 l
 11136 3819 l 11133 3799 l 11130 3780 l 11126 3758 l 11121 3736 l
 11115 3714 l 11109 3692 l 11103 3671 l 11095 3650 l 11087 3629 l
 11078 3608 l 11068 3588 l 11058 3569 l 11046 3550 l 11034 3532 l
 11022 3515 l 11009 3500 l 10995 3485 l 10981 3471 l 10967 3459 l
 10952 3448 l 10936 3437 l 10920 3428 l 10905 3419 l 10888 3412 l
 10871 3405 l 10852 3398 l 10832 3392 l 10810 3386 l 10785 3380 l
 10759 3375 l 10729 3369 l 10698 3364 l 10665 3359 l 10631 3354 l
 10596 3349 l 10562 3344 l 10530 3340 l 10502 3337 l 10479 3334 l

 10440 3330 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
45.000 slw
n 10643 3312 m 10520 3338 l 10635 3387 l  col0 s
/Helvetica ff 225.00 scf sf
2970 3285 m
gs 1 -1 sc  90.0 rot (interface) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
9315 2835 m
gs 1 -1 sc (group object) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 225.00 scf sf
9315 6120 m
gs 1 -1 sc (group object) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
% 
% here starts figure with depth 47
/Helvetica-Bold ff 300.00 scf sf
2925 5130 m
gs 1 -1 sc (JVM 1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 300.00 scf sf
8460 3330 m
gs 1 -1 sc (JVM 2) dup sw pop 2 div neg 0 rm  col0 sh gr
/Helvetica-Bold ff 300.00 scf sf
8460 6615 m
gs 1 -1 sc (JVM 3) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
